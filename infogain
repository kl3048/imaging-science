%Load images
IntensityImage = niftiread('ICBMlores.nii.gz');
LabelImage     = niftiread('ICBMGMWMCSFlores.nii.gz');
%Extract non-background data
labelmask = LabelImage(:);
intensitydata = IntensityImage(:);
labelsubset = labelmask(labelmask>0);
intensitysubset =  intensitydata(labelmask>0);

%Sort the intensity values
nbins = 32;
min1 = min(intensitydata); max1 = max(intensitydata);
IntensityRange = (max1 - min1);
BinSize = (max1 - min1)/nbins;
histogram = zeros(nbins+1,1); % initialize histogram
   for iii = 1:length(intensitydata);
    idx = floor( (intensitydata(iii) - min1)/BinSize) + 1; % bin location
    histogram (idx) = histogram(idx) + 1; % increment histogram
   end
histogram = histogram /length(intensitydata); % normalize to 1
%entropy = -sum(histogram .*log(histogram ))
%Compute initial entropy
EntropyBefore = -sum(histogram .*log(histogram ))
%Compute max information gain/intensity threshold and store in the maxInformationGain/intensityMaxInformationGain variables
nbins = 32;
min1 = min(intensitydata); max1 = max(intensitydata);
IntensityRange = (max1 - min1);
BinSize = (max1 - min1)/nbins;
histogram = zeros(nbins+1,1); % initialize histogram
   for iii = 1:length(intensitydata);
    idx = floor( (intensitydata(iii) - min1)/BinSize) + 1; % bin location
    histogram (idx) = histogram(idx) + 1; % increment histogram
   end
histogram = histogram /length(intensitydata); % normalize to 1
%intensityMaxInformationGain = 
%maxInformationGain = 
